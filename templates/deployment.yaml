apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-dev-environment
  labels:
    app: node-dev-environment
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: node-dev-environment
  template:
    metadata:
      labels:
        app: node-dev-environment
    spec:
      containers:
        - name: node-container
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"  # Node.js image
          resources:
            requests:
              memory: "{{ .Values.resources.requests.memory }}"
              cpu: "{{ .Values.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.resources.limits.memory }}"
              cpu: "{{ .Values.resources.limits.cpu }}"
          ports:
            - containerPort: 3000  # Node.js default port
          env:
            - name: PACKAGES
              value: "{{ .Values.dependencies | join \",\" }}"
          command:
            - "/bin/sh"
            - "-c"
            - |
              # Create package.json if it doesn't exist
              if [ ! -f "/app/package.json" ]; then
                echo '{"dependencies":{}}' > /app/package.json  # Create empty dependencies object
              fi
              # Install dependencies dynamically from the list of packages
              DEPENDENCIES=$(echo $PACKAGES | tr ',' '\n')
              for DEP in $DEPENDENCIES; do
                npm install $DEP --save
              done
              # Start the Node app
              npm start
